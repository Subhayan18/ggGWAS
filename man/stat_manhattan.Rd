% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_manhattan.R
\name{stat_manhattan}
\alias{stat_manhattan}
\title{Manhattan plot with ggplot2 features}
\usage{
stat_manhattan(mapping = NULL, data = NULL, geom = "point",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, y.thresh = NULL, chr.class = "numeric", ...)
}
\arguments{
\item{y.thresh}{a vector}

\item{...}{}
}
\description{
Manhattan plot with ggplot2 features
}
\details{
See also \url{https://github.com/tidyverse/ggplot2/blob/master/R/stat-qq.r}
}
\examples{
library(GWAS.utils) ## devtools::install_github("sinarueeger/GWAS.utils")
data("giant")
?giant
theme_set(theme_gwas())

## default: for -log10(P), by default chr is numeric
qp <- ggplot(giant) +
  stat_manhattan(aes(pos = POS, y = -log10(P), chr = CHR)) +
  geom_hline(yintercept = 8) +
  ggtitle("GIANT summary statistics (by default CHR is numeric)")
print(qp)

## add nice color palette
pal <- wesanderson::wes_palette("Zissou1", 22, type = "continuous")
qp + scale_color_gradientn(colours = pal)

## chr factor
qp <- ggplot(giant) +
  stat_manhattan(aes(pos = POS, y = -log10(P), chr = CHR), chr.class = "character") +
  geom_hline(yintercept = 8) +
  ggtitle("GIANT summary statistics (CHR is now a character/factor)")
print(qp)
## adding a nice color palette
qp + scale_color_manual(values = wesanderson::wes_palette("Zissou1", 22, type = "continuous"))

## turn all points black
qp <- ggplot(giant) +
  stat_manhattan(aes(pos = POS, y = -log10(P), chr = CHR), color = "black", alpha = I(0.4)) +
  geom_hline(yintercept = 8) +
  ggtitle("GIANT summary statistics")
print(qp)

## set lower threshold
qp <- ggplot(data = giant) +
  stat_manhattan(aes(pos = POS, y = -log10(P), chr = CHR), y.thresh= c(2, NA)) +
  geom_hline(yintercept = 8) +
  ggtitle("GIANT summary statistics")
print(qp)


## for effect sizes
qp <- ggplot(data = giant) +
  stat_manhattan(aes(pos = POS, y = BETA, chr = CHR)) +
  ggtitle("GIANT effect sizes")
print(qp)

## use rastr
qp <- ggplot(data = giant) +
  stat_manhattan(aes(pos = POS, y = -log10(P), chr = CHR), geom = ggrastr:::GeomPointRast) +
  geom_hline(yintercept = 8) +
  ggtitle("GIANT summary statistics (rastr)")
print(qp)

## facetting

giant <- giant \%>\% dplyr::mutate(gr = dplyr::case_when(BETA <= 0 ~ "Neg effect size", BETA > 0 ~ "Pos effect size"))## generate two groups

qp <- ggplot(data = giant) +
  stat_manhattan(aes(pos = POS, y = BETA, chr = CHR)) +
  ggtitle("GIANT summary statistics") +
  facet_wrap(~gr)
print(qp)
}
